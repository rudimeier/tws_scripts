#!/bin/bash

TWS_TIMEOUT="30"

if ! test -e "$1"; then
	echo "Usage: $0 <installer.sh | installer.jar | TWSDIR>" 1>&2
	exit 1
fi

ARG1="$(readlink -v -f "$1")" || exit 1

TDIR="$(mktemp -d -t twsdir.XXXX)" || exit 1
trap "rm -rf ${TDIR}" exit
cd "${TDIR}" || exit 1


# may not work with "new style" twsdir
getver_twsdir_run()
{
	TWS_HOME="${TDIR}/twshome"
	mkdir "${TWS_HOME}" || exit 1
	cp -a "${TWS_DIR}/jts.ini" "${TWS_HOME}" || exit 1
	LOG_FIFO="${TDIR}/twslogpipe"
	mkfifo "${LOG_FIFO}" || exit 1

	TWS_CP="${TWS_DIR}/jts:${TWS_DIR}/*"
	java -cp "${TWS_CP}" jclient.LoginFrame "${TWS_HOME}" &>"${LOG_FIFO}" &
	disown
	TWS_PID="$!"

	VERSION_LINE="$(timeout "${TWS_TIMEOUT}" grep -m1 --line-buffered ": Build" "${LOG_FIFO}")"
	grep_rval="$?"
	kill -9 "${TWS_PID}" &>/dev/null

	if test "${grep_rval}" = "124"; then
		echo "timeout waiting for version string" 1>&2
		exit 1
	elif test "${grep_rval}" != "0"; then
		echo "could not grep version string" 1>&2
		exit 1
	fi

	echo "${VERSION_LINE}" |sed -e 's/.*Build //1' -e 's/,.*//1'
}

getver_shinstaller_grep()
{
	local tailnum
	local tws_version

	tailnum=$(grep -a -m1 "\btail\b.* -c.*" "$ARG1" \
	          | sed -n 's/.* -c *\([0-9]*\).*/\1/p')

	if ! test "0" -lt "$tailnum" 2>/dev/null; then
		echo "error: can't grep tailnum from sh installer '"$ARG1"'" >&2
		exit 1
	fi

	if ! tail -c "$tailnum" "${ARG1}" | tar -xzf - i4jparams.conf; then
		echo "error: can't untar i4jparams.confs from sh installer '"$ARG1"'">&2
		exit 1
	fi

	tws_version=$(grep -m1 '<variable name="buildInfo"' i4jparams.conf \
		| sed -n 's/.* value="Build \([^ ]*\) .*/\1/p')

	if test -z "$tws_version"; then
		echo "error: can't grep tws version from sh installer '"$ARG1"'" >&2
		exit 1
	fi

	echo "$tws_version"
}


## here we go

TWS_DIR=""
if test -d "${ARG1}"; then
	if test -f "${ARG1}/jts.ini" ;then
		TWS_DIR="${ARG1}"
	else
		echo "error: directory '"${ARG1}"' is not a TWS installation" >&2
		exit 1
	fi
elif test ${ARG1: -4} = ".jar"; then
	if jar xf "${ARG1}" &>/dev/null && test -f IBJts/jts.jar; then
		TWS_DIR="IBJts"
	else
		echo "error: invalid jar file '"${ARG1}"'" >&2
		exit 1
	fi
elif test ${ARG1: -3} = ".sh"; then
	true
else
	echo "error: unsupported file type '"${ARG1}"'" >&2
	exit 1
fi


if test -n "$TWS_DIR"; then
	getver_twsdir_run
else
	getver_shinstaller_grep
fi


